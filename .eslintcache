[{"C:\\Users\\Web Developer1\\Desktop\\react2021\\docentes\\src\\index.js":"1","C:\\Users\\Web Developer1\\Desktop\\react2021\\docentes\\src\\App.js":"2","C:\\Users\\Web Developer1\\Desktop\\react2021\\docentes\\src\\reportWebVitals.js":"3","C:\\Users\\Web Developer1\\Desktop\\react2021\\usuarios\\src\\index.js":"4","C:\\Users\\Web Developer1\\Desktop\\react2021\\usuarios\\src\\reportWebVitals.js":"5","C:\\Users\\Web Developer1\\Desktop\\react2021\\usuarios\\src\\App.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":6656,"mtime":1612231799640,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":6774,"mtime":1614107437810,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"10ia5b8",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16nf3ve",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Web Developer1\\Desktop\\react2021\\docentes\\src\\index.js",[],["29","30"],"C:\\Users\\Web Developer1\\Desktop\\react2021\\docentes\\src\\App.js",["31"],"import React, {useState, useEffect} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\nimport axios from 'axios';\n\nfunction App() {\n  const baseUrl=\"http://localhost/apidocentes/\"\n  const [data, setData]=useState([]);\n\n  const [modalInsertar, setModalInsertar]= useState(false);\n  const [modalEditar, setModalEditar]= useState(false);\n  const [modalEliminar, setModalEliminar]= useState(false);\n  const [docenteSeleccionado, setDocenteSeleccionado]=useState({\n    id: '',\n    nombre: '',\n    especialidad: '',\n    correo: ''\n  });\n\n  const handleChange=e=>{\n    const {name, value}=e.target;\n    setDocenteSeleccionado((prevState)=>({\n      ...prevState,\n      [name]: value\n    }))\n    console.log(docenteSeleccionado);\n  }\n\n  const abrirCerrarModalInsertar=()=>{\n    setModalInsertar(!modalInsertar);\n  }\n\n  const abrirCerrarModalEditar=()=>{\n    setModalEditar(!modalEditar);\n  }\n\n  const abrirCerrarModalEliminar=()=>{\n    setModalEliminar(!modalEliminar);\n  }\n\n  const peticionGet=async()=>{\n    await axios.get(baseUrl)\n    .then(response=>{\n      setData(response.data);\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const peticionPost=async()=>{\n    var f = new FormData();\n    f.append(\"nombre\", docenteSeleccionado.nombre);\n    f.append(\"especialidad\", docenteSeleccionado.especialidad);\n    f.append(\"correo\", docenteSeleccionado.correo);\n    f.append(\"METHOD\", \"POST\");\n    await axios.post(baseUrl, f)\n    .then(response=>{\n      setData(data.concat(response.data));\n      abrirCerrarModalInsertar();\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const peticionPut=async()=>{\n    var f = new FormData();\n    f.append(\"nombre\", docenteSeleccionado.nombre);\n    f.append(\"especialidad\", docenteSeleccionado.especialidad);\n    f.append(\"correo\", docenteSeleccionado.correo);\n    f.append(\"METHOD\", \"PUT\");\n    await axios.post(baseUrl, f, {params: {id: docenteSeleccionado.id}})\n    .then(response=>{\n      var dataNueva= data;\n      dataNueva.map(docente=>{\n        if(docente.id===docenteSeleccionado.id){\n          docente.nombre=docenteSeleccionado.nombre;\n          docente.especialidad=docenteSeleccionado.especialidad;\n          docente.correo=docenteSeleccionado.correo;\n        }\n      });\n      setData(dataNueva);\n      abrirCerrarModalEditar();\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const peticionDelete=async()=>{\n    var f = new FormData();\n    f.append(\"METHOD\", \"DELETE\");\n    await axios.post(baseUrl, f, {params: {id: docenteSeleccionado.id}})\n    .then(response=>{\n      setData(data.filter(docente=>docente.id!==docenteSeleccionado.id));\n      abrirCerrarModalEliminar();\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const seleccionarDocente=(docente, caso)=>{\n    setDocenteSeleccionado(docente);\n\n    (caso===\"Editar\")?\n    abrirCerrarModalEditar():\n    abrirCerrarModalEliminar()\n  }\n\n  useEffect(() => {\n    peticionGet();\n  }, [])\n\n  return (\n    <div style={{textAlign: 'center'}}>\n      <br />\n          <button className=\"btn btn-success\" onClick={()=>abrirCerrarModalInsertar()}>Insertar</button>\n      <br /><br />\n      \n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Nombre</th>\n            <th>Especialidad</th>\n            <th>Correo</th>\n            <th>Acciones</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map(docente=>(\n            <tr key={docente.id}>\n              <td>{docente.id}</td>\n              <td>{docente.nombre}</td>\n              <td>{docente.especialidad}</td>\n              <td>{docente.correo}</td>\n              <td>\n                <button className=\"btn btn-primary\" onClick={()=>seleccionarDocente(docente, \"Editar\")}>Editar</button> {\" \"}\n                <button className=\"btn btn-danger\" onClick={()=>seleccionarDocente(docente, \"Eliminar\")}>Borrar</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <Modal isOpen={modalInsertar}>\n      <ModalHeader>Insertar Framework</ModalHeader>\n      <ModalBody>\n        <div className=\"form-group\">\n          <label>Nombre: </label>\n          <br />\n          <input type=\"text\" className=\"form-control\" name=\"nombre\" onChange={handleChange}/>\n          <br />\n          <label>Especialidad: </label>\n          <br />\n          <input type=\"text\" className=\"form-control\" name=\"especialidad\" onChange={handleChange}/>\n          <br />\n          <label>Correo: </label>\n          <br />\n          <input type=\"text\" className=\"form-control\" name=\"correo\" onChange={handleChange}/>\n          <br />\n        </div>\n      </ModalBody>\n      <ModalFooter>\n        <button className=\"btn btn-primary\" onClick={()=>peticionPost()}>Insertar</button>{\"   \"}\n        <button className=\"btn btn-danger\" onClick={()=>abrirCerrarModalInsertar()}>Cancelar</button>\n      </ModalFooter>\n    </Modal>\n    \n    <Modal isOpen={modalEditar}>\n      <ModalHeader>Editar Framework</ModalHeader>\n      <ModalBody>\n        <div className=\"form-group\">\n          <label>Nombre: </label>\n          <br />\n          <input type=\"text\" className=\"form-control\" name=\"nombre\" onChange={handleChange} value={docenteSeleccionado && docenteSeleccionado.nombre}/>\n          <br />\n          <label>Especialidad: </label>\n          <br />\n          <input type=\"text\" className=\"form-control\" name=\"especialidad\" onChange={handleChange} value={docenteSeleccionado && docenteSeleccionado.especialidad}/>\n          <br />\n          <label>Correo: </label>\n          <br />\n          <input type=\"text\" className=\"form-control\" name=\"correo\" onChange={handleChange} value={docenteSeleccionado && docenteSeleccionado.correo}/>\n          <br />\n        </div>\n      </ModalBody>\n      <ModalFooter>\n        <button className=\"btn btn-primary\" onClick={()=>peticionPut()}>Editar</button>{\"   \"}\n        <button className=\"btn btn-danger\" onClick={()=>abrirCerrarModalEditar()}>Cancelar</button>\n      </ModalFooter>\n    </Modal>\n\n    <Modal isOpen={modalEliminar}>\n        <ModalBody>\n        ¿Estás seguro que deseas eliminar al Docente {docenteSeleccionado && docenteSeleccionado.nombre}?\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"btn btn-danger\" onClick={()=>peticionDelete()}>\n            Sí\n          </button>\n          <button\n            className=\"btn btn-secondary\"\n            onClick={()=>abrirCerrarModalEliminar()}\n          >\n            No\n          </button>\n        </ModalFooter>\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Web Developer1\\Desktop\\react2021\\docentes\\src\\reportWebVitals.js",[],"C:\\Users\\Web Developer1\\Desktop\\react2021\\usuarios\\src\\index.js",[],"C:\\Users\\Web Developer1\\Desktop\\react2021\\usuarios\\src\\reportWebVitals.js",[],"C:\\Users\\Web Developer1\\Desktop\\react2021\\usuarios\\src\\App.js",["32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":74,"column":28,"nodeType":"39","messageId":"40","endLine":74,"endColumn":30},{"ruleId":"37","severity":1,"message":"38","line":78,"column":28,"nodeType":"39","messageId":"40","endLine":78,"endColumn":30},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]